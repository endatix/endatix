// <auto-generated />
using System;
using Endatix.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Endatix.Persistence.SqlServer.Migrations.AppEntity
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Endatix.Core.Entities.Form", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Forms", (string)null);
                });

            modelBuilder.Entity("Endatix.Core.Entities.FormDefinition", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("FormId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("bit");

                    b.Property<string>("JsonData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId", "IsActive")
                        .IsUnique()
                        .HasFilter("IsActive = 1");

                    b.ToTable("FormDefinitions", (string)null);
                });

            modelBuilder.Entity("Endatix.Core.Entities.Submission", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrentPage")
                        .HasColumnType("int");

                    b.Property<long>("FormDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("JsonData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FormDefinitionId");

                    b.ToTable("Submissions", (string)null);
                });

            modelBuilder.Entity("Endatix.Core.Entities.FormDefinition", b =>
                {
                    b.HasOne("Endatix.Core.Entities.Form", "Form")
                        .WithMany("FormDefinitions")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("Endatix.Core.Entities.Submission", b =>
                {
                    b.HasOne("Endatix.Core.Entities.FormDefinition", "FormDefinition")
                        .WithMany("Submissions")
                        .HasForeignKey("FormDefinitionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("Endatix.Core.Entities.Token", "Token", b1 =>
                        {
                            b1.Property<long>("SubmissionId")
                                .HasColumnType("bigint");

                            b1.Property<DateTime>("ExpiresAt")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SubmissionId");

                            b1.ToTable("Submissions");

                            b1.WithOwner()
                                .HasForeignKey("SubmissionId");
                        });

                    b.Navigation("FormDefinition");

                    b.Navigation("Token");
                });

            modelBuilder.Entity("Endatix.Core.Entities.Form", b =>
                {
                    b.Navigation("FormDefinitions");
                });

            modelBuilder.Entity("Endatix.Core.Entities.FormDefinition", b =>
                {
                    b.Navigation("Submissions");
                });
#pragma warning restore 612, 618
        }
    }
}
