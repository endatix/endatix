name: endatix

services:
  endatix-api:
    container_name: endatix-api
    image: endatix/endatix-api:latest
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ConnectionStrings__DefaultConnection: Server=endatix-db;User Id=sa;Password=${SQLSERVER_SA_PASSWORD};Initial Catalog=endatix;TrustServerCertificate=True;
      Security__JwtSigningKey: ${SECURITY_JWT_SIGNING_KEY}
      Security__DevUsers__0__Email: ${SECURITY_DEV_USERS_0_EMAIL}
      Security__DevUsers__0__Password: ${SECURITY_DEV_USERS_0_PASSWORD}
      Email__SendGridSettings__ApiKey: ${SENDGRID_API_KEY}
    ports:
      - "5001:8080"
    networks:
      - appnetwork
    depends_on:
      endatix-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 2s

  endatix-hub:
    container_name: endatix-hub
    image: endatix/endatix-hub:latest
    environment:
      NODE_ENV: development
    ports:
      - "3000:3000"
    networks:
      - appnetwork
    depends_on:
      endatix-api:
        condition: service_healthy

  endatix-db:
    container_name: endatix-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: ${SQLSERVER_SA_PASSWORD}
    ports:
      - "1433:1433"
    networks:
      - appnetwork
    healthcheck:
      test: ["CMD", "opt/mssql-tools18/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "${SQLSERVER_SA_PASSWORD}", "-Q", "SELECT 1", "-C"]
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 2s

networks:
  appnetwork:
    driver: bridge
